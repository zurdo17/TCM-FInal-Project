import time
import random
import csv
import pandas as pd

##reads the csv file containing all the data and cleans it to avoid any missing values within the platform
csv_file = "question_data.csv"
df = pd.read_csv(csv_file, names=["College", "Question"])
modified_df = df.dropna()
df_question = modified_df.groupby("College")["Question"]

##Interacts with the user allowing him/her to determine the medical schools they are interested to interview for

def Startup():
    print()
    print("Welcome to the Medical School Interview Preparation Tool")
    print()
    time.sleep(3)
    print("You will now be presented with a list of all medical schools in the SDN database.")
    print()
    time.sleep(4)
    print("After selecting a medical school, copy and paste the name the name of the school into the command line.")
    print()
    time.sleep(4)
    x = input("Would you like to proceed with the school selection process? (yes/no): ")
    if x == "yes":
        return None
    if x == "no":
        exitProgram()
        quit()

##opens csv to allow the program search for the school and their respective questions

def searchSchool():
    with open("school_names.csv") as f:
        reader = csv.reader(f)
        for row in reader:
            print(row[0])
            time.sleep(0.01)
    print()

#variable created to get a random question from a specific college after the user tells their school of interest

def generateRandomQuestion(df, college):
    return random.choice(df[df['College'] == college]['Question'].values)

#variable focused on ending the program!

def exitProgram():
    print()
    print()
    time.sleep(0.5)
    print("Thank you for using the Medical School Interview Preparation Tool")
    time.sleep(0.5)

##################### MAIN PROGRAM #####################

Startup()
time.sleep(1)

search_new_school = "yes"
while search_new_school == "yes":

    searchSchool()

## The user is given the opportunity to place the medical school interested in their search
    school_selection = input('Please enter a medical school from the list above: ')

##Main program combines the previvous definitions and uses a csv scrapper for the targetted school accordingly to the user's choice.
###the random question def is used from above and gives out only questions from selected school. The goal is for the user to test themselves for an interview with said School
    continue_prep = "yes"
    while continue_prep == "yes":
        print()
        time.sleep(1)
        print(f"Generating random interview question from {school_selection!r}")
        print()
        time.sleep(1)
        print("...")
        time.sleep(1)
        print()
        random_question = generateRandomQuestion(modified_df, school_selection)
        print(random_question)
        print()
        time.sleep(1.5)
        continue_prep = input("Would you like another question? (yes/no): ")

##After receiving their question, the user is given the choice to search for another question or another school

    print()
    search_new_school = input("Would you like to search questions from another school? (yes/no): ")

exitProgram()
